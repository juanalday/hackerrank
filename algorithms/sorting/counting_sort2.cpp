//https://www.hackerrank.com/challenges/countingsort2/problem

#include <gtest/gtest.h>
#include "gmock/gmock-matchers.h"

#include <vector>

using ::testing::ElementsAre;

namespace {
	std::vector<int> countingSort(std::vector<int> const& arr) {
		std::vector<int> counter(100, 0);
		for_each(arr.begin(), arr.end(), [&counter](auto value) {++counter[value]; });
		std::vector<int> ret(arr.size(), 0);
		ret.clear();

		int i(0);
		for (auto countIter = counter.begin(); countIter != counter.end(); ++countIter, ++i)
		{
			if (*countIter > 0) {
				ret.insert(ret.end(), *countIter, i);
			}
		}
		return ret;
	}
}
TEST(countingSort2, sample)
{
	EXPECT_THAT(countingSort({ 63 ,25 ,73 ,1 ,98 ,73 ,56 ,84 ,86 ,57 ,16 ,83 ,8 ,25 ,81 ,56 ,9 ,53 ,98 ,67 ,99 ,12 ,83 ,89 ,80 ,91 ,39 ,86 ,76 ,85 ,74 ,39 ,25 ,90 ,59 ,10 ,94 ,32 ,44 ,3 ,89 ,30 ,27 ,79 ,46 ,96 ,27 ,32 ,18 ,21 ,92 ,69 ,81 ,40 ,40 ,34 ,68 ,78 ,24 ,87 ,42 ,69 ,23 ,41 ,78 ,22 ,6 ,90 ,99 ,89 ,50 ,30 ,20 ,1 ,43 ,3 ,70 ,95 ,33 ,46 ,44 ,9 ,69 ,48 ,33 ,60 ,65 ,16 ,82 ,67 ,61 ,32 ,21 ,79 ,75 ,75 ,13 ,87 ,70 ,33 }),
		ElementsAre(1, 1, 3, 3, 6, 8, 9, 9, 10, 12, 13, 16, 16, 18, 20, 21, 21, 22, 23, 24, 25, 25, 25, 27, 27, 30, 30, 32, 32, 32, 33, 33, 33, 34, 39, 39, 40, 40, 41, 42, 43, 44, 44, 46, 46, 48, 50, 53, 56, 56, 57, 59, 60, 61, 63, 65, 67, 67, 68, 69, 69, 69, 70, 70, 73, 73, 74, 75, 75, 76, 78, 78, 79, 79, 80, 81, 81, 82, 83, 83, 84, 85, 86, 86, 87, 87, 89, 89, 89, 90, 90, 91, 92, 94, 95, 96, 98, 98, 99, 99));
}

TEST(countingSort2, case0)
{
	EXPECT_THAT(countingSort({ 63 ,25 ,73 ,1 ,98 ,73 ,56 ,84 ,86 ,57 ,16 ,83 ,8 ,25 ,81 ,56 ,9 ,53 ,98 ,67 ,99 ,12 ,83 ,89 ,80 ,91 ,39 ,86 ,76 ,85 ,74 ,39 ,25 ,90 ,59 ,10 ,94 ,32 ,44 ,3 ,89 ,30 ,27 ,79 ,46 ,96 ,27 ,32 ,18 ,21 ,92 ,69 ,81 ,40 ,40 ,34 ,68 ,78 ,24 ,87 ,42 ,69 ,23 ,41 ,78 ,22 ,6 ,90 ,99 ,89 ,50 ,30 ,20 ,1 ,43 ,3 ,70 ,95 ,33 ,46 ,44 ,9 ,69 ,48 ,33 ,60 ,65 ,16 ,82 ,67 ,61 ,32 ,21 ,79 ,75 ,75 ,13 ,87 ,70 ,33 }),
		ElementsAre(1, 1, 3, 3, 6, 8, 9, 9, 10, 12, 13, 16, 16, 18, 20, 21, 21, 22, 23, 24, 25, 25, 25, 27, 27, 30, 30, 32, 32, 32, 33, 33, 33, 34, 39, 39, 40, 40, 41, 42, 43, 44, 44, 46, 46, 48, 50, 53, 56, 56, 57, 59, 60, 61, 63, 65, 67, 67, 68, 69, 69, 69, 70, 70, 73, 73, 74, 75, 75, 76, 78, 78, 79, 79, 80, 81, 81, 82, 83, 83, 84, 85, 86, 86, 87, 87, 89, 89, 89, 90, 90, 91, 92, 94, 95, 96, 98, 98, 99, 99));
}

TEST(countingSort2, case4)
{
	EXPECT_THAT(countingSort({ 19, 10, 12, 10, 24, 25, 22 }),
		ElementsAre(10, 10, 12, 19, 22, 24, 25));
}